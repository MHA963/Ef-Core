// <auto-generated />
using CanteenDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CanteenDb.Migrations
{
    [DbContext(typeof(myDbContext))]
    [Migration("20230414141243_NewMigration4")]
    partial class NewMigration4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CanteenDb.Models.CanceledMeals", b =>
                {
                    b.Property<string>("CanceledMealsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("CanteenName");

                    b.ToTable("CanceledMeals");
                });

            modelBuilder.Entity("CanteenDb.Models.Canteen", b =>
                {
                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("AvgRating")
                        .HasColumnType("real");

                    b.Property<int>("postCode")
                        .HasColumnType("int");

                    b.HasKey("CanteenName");

                    b.ToTable("Canteen");
                });

            modelBuilder.Entity("CanteenDb.Models.Customer", b =>
                {
                    b.Property<string>("AUID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AUID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CanteenDb.Models.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<string>("AUID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("AUID");

                    b.HasIndex("CanteenName");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("CanteenDb.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<string>("AUID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationId");

                    b.HasIndex("AUID");

                    b.HasIndex("CanteenName");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("CanteenDb.Models.ReservationMenu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.HasIndex("CanteenName");

                    b.ToTable("ReservationMenu");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ReservationMenu");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CanteenDb.Models.Reservationlist", b =>
                {
                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CanteenName");

                    b.ToTable("Reservationlist");
                });

            modelBuilder.Entity("CanteenDb.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"));

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffID");

                    b.HasIndex("CanteenName");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("CanteenDb.Models.StreetFood", b =>
                {
                    b.HasBaseType("CanteenDb.Models.ReservationMenu");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("StreetFood");
                });

            modelBuilder.Entity("CanteenDb.Models.Warmdish", b =>
                {
                    b.HasBaseType("CanteenDb.Models.ReservationMenu");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ReservationMenu", t =>
                        {
                            t.Property("name")
                                .HasColumnName("Warmdish_name");
                        });

                    b.HasDiscriminator().HasValue("Warmdish");
                });

            modelBuilder.Entity("CanteenDb.Models.CanceledMeals", b =>
                {
                    b.HasOne("CanteenDb.Models.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenName");

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("CanteenDb.Models.Ratings", b =>
                {
                    b.HasOne("CanteenDb.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("AUID");

                    b.HasOne("CanteenDb.Models.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenName");

                    b.Navigation("Canteen");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CanteenDb.Models.Reservation", b =>
                {
                    b.HasOne("CanteenDb.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("AUID");

                    b.HasOne("CanteenDb.Models.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenName");

                    b.Navigation("Canteen");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CanteenDb.Models.ReservationMenu", b =>
                {
                    b.HasOne("CanteenDb.Models.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenName");

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("CanteenDb.Models.Reservationlist", b =>
                {
                    b.HasOne("CanteenDb.Models.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenName");

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("CanteenDb.Models.Staff", b =>
                {
                    b.HasOne("CanteenDb.Models.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteen");
                });
#pragma warning restore 612, 618
        }
    }
}
